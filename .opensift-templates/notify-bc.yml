apiVersion: v1
kind: Template
labels:
  template: notify-bc
metadata:
  annotations:
    description: NotifyBC app with a MongoDB database
    iconClass: icon-nodejs
    tags: instant-app,nodejs,mongodb
  name: notify-bc
objects:
- apiVersion: v1
  kind: ImageStream
  metadata:
    annotations:
      description: Keeps track of changes in the application image
    name: notify-bc
- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: ${DATABASE_SERVICE_NAME}
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: ${VOLUME_CAPACITY}
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      description: Defines how to deploy the application server
    name: notify-bc-app
  spec:
    replicas: 1
    strategy:
      type: Rolling
    template:
      metadata:
        labels:
          name: notify-bc-app
      spec:
        containers:
        - env:
          - name: NODE_ENV
            value: production
          - name: DATABASE_SERVICE_NAME
            value: ${DATABASE_SERVICE_NAME}
          - name: MONGODB_USER
            value: ${DATABASE_USER}
          - name: MONGODB_PASSWORD
            value: ${DATABASE_PASSWORD}
          - name: MONGODB_DATABASE
            value: ${DATABASE_NAME}
          - name: MONGODB_ADMIN_PASSWORD
            value: ${DATABASE_ADMIN_PASSWORD}
          - name: NOTIFYBC_NODE_ROLE
            value: "slave"
          image: notify-bc
          name: notify-bc
          volumeMounts:
          - name: config-volume
            mountPath: /mnt
          livenessProbe:
            httpGet:
              path: /
              port: 3000
              scheme: HTTP
            initialDelaySeconds: 60
            timeoutSeconds: 2
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /
              port: 3000
              scheme: HTTP
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          ports:
          - containerPort: 3000
        volumes:
          - name: config-volume
            configMap:
              name: notify-bc
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - notify-bc
        from:
          kind: ImageStreamTag
          name: notify-bc:latest
      type: ImageChange
    - type: ConfigChange

- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      description: Defines how to deploy the application server
    name: notify-bc-cron
  spec:
    replicas: 1
    strategy:
      type: Rolling
    template:
      metadata:
        labels:
          name: notify-bc-cron
      spec:
        containers:
        - env:
          - name: NODE_ENV
            value: production
          - name: DATABASE_SERVICE_NAME
            value: ${DATABASE_SERVICE_NAME}
          - name: MONGODB_USER
            value: ${DATABASE_USER}
          - name: MONGODB_PASSWORD
            value: ${DATABASE_PASSWORD}
          - name: MONGODB_DATABASE
            value: ${DATABASE_NAME}
          - name: MONGODB_ADMIN_PASSWORD
            value: ${DATABASE_ADMIN_PASSWORD}
          - name: NOTIFYBC_NODE_ROLE
            value: "master"
          image: notify-bc
          name: notify-bc
          volumeMounts:
          - name: config-volume
            mountPath: /mnt
          resources:
            limits:
              cpu: 100m
            requests:
              cpu: 100m
          livenessProbe:
            httpGet:
              path: /
              port: 3000
              scheme: HTTP
            initialDelaySeconds: 60
            timeoutSeconds: 2
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /
              port: 3000
              scheme: HTTP
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          ports:
          - containerPort: 3000
        volumes:
          - name: config-volume
            configMap:
              name: notify-bc
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - notify-bc
        from:
          kind: ImageStreamTag
          name: notify-bc:latest
      type: ImageChange
    - type: ConfigChange
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    annotations:
      description: Defines how to deploy the database
    name: ${DATABASE_SERVICE_NAME}
  spec:
    replicas: 1
    strategy:
      type: Recreate
    template:
      metadata:
        labels:
          name: ${DATABASE_SERVICE_NAME}
      spec:
        containers:
        - env:
          - name: MONGODB_USER
            value: ${DATABASE_USER}
          - name: MONGODB_PASSWORD
            value: ${DATABASE_PASSWORD}
          - name: MONGODB_DATABASE
            value: ${DATABASE_NAME}
          - name: MONGODB_ADMIN_PASSWORD
            value: ${DATABASE_ADMIN_PASSWORD}
          image: ' '
          livenessProbe:
            initialDelaySeconds: 30
            tcpSocket:
              port: 27017
            timeoutSeconds: 1
          name: mongodb
          ports:
          - containerPort: 27017
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -i
              - -c
              - mongo 127.0.0.1:27017/$MONGODB_DATABASE -u $MONGODB_USER -p $MONGODB_PASSWORD
                --eval="quit()"
            initialDelaySeconds: 3
            timeoutSeconds: 1
          resources:
            limits:
              memory: ${MEMORY_MONGODB_LIMIT}
          volumeMounts:
          - mountPath: /var/lib/mongodb/data
            name: ${DATABASE_SERVICE_NAME}-data
        volumes:
        - emptyDir:
            medium: ''
          name: ${DATABASE_SERVICE_NAME}-data
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - mongodb
        from:
          kind: ImageStreamTag
          name: mongodb:3.2
          namespace: openshift
      type: ImageChange
    - type: ConfigChange
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      description: Exposes and load balances the application pods
    name: notify-bc
  spec:
    ports:
    - name: web
      port: 3000
      targetPort: 3000
    selector:
      name: notify-bc-app
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      description: Exposes the database server
    name: ${DATABASE_SERVICE_NAME}
  spec:
    ports:
    - name: mongodb
      port: 27017
      targetPort: 27017
    selector:
      name: ${DATABASE_SERVICE_NAME}
- apiVersion: v1
  kind: Route
  metadata:
    name: notify-bc
  spec:
    host: ${APPLICATION_DOMAIN}
    to:
      kind: Service
      name: notify-bc
    port:
        targetPort: 3000
- apiVersion: extensions/v1beta1
  kind: HorizontalPodAutoscaler
  metadata:
    name: notify-bc-cron
  spec:
    scaleRef:
      kind: DeploymentConfig
      name: notify-bc-cron
      apiVersion: extensions/v1beta1
      subresource: scale
    minReplicas: 1
    maxReplicas: 1
- apiVersion: v1
  kind: ConfigMap
  metadata:
    name: notify-bc
parameters:
- description: Database service name
  name: DATABASE_SERVICE_NAME
  value: mongodb
- description: Username for MongoDB user that will be used for accessing the database
  from: user[A-Z0-9]{3}
  generate: expression
  name: DATABASE_USER
- description: Password for the MongoDB user
  from: '[a-zA-Z0-9]{16}'
  generate: expression
  name: DATABASE_PASSWORD
- description: Database name
  name: DATABASE_NAME
  value: notify-bc
- description: Password for the database admin user
  from: '[a-zA-Z0-9]{16}'
  generate: expression
  name: DATABASE_ADMIN_PASSWORD
- description: Volume space available for data, e.g. 512Mi, 2Gi
  displayName: Volume capacity
  name: VOLUME_CAPACITY
  required: true
  value: 512Mi
- description: Maximum amount of memory the MongoDB container can use.
  displayName: Memory Limit (MongoDB)
  name: MEMORY_MONGODB_LIMIT
  required: true
  value: 512Mi
- description: The exposed hostname that will route to the Node.js service, if left
    blank a value will be defaulted.
  name: APPLICATION_DOMAIN
