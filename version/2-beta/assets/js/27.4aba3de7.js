(window.webpackJsonp=window.webpackJsonp||[]).push([[27],{423:function(e,i,n){"use strict";n.r(i);var t=n(42),s=Object(t.a)({},(function(){var e=this,i=e.$createElement,n=e._self._c||i;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h1",{attrs:{id:"configuration-overview"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#configuration-overview"}},[e._v("#")]),e._v(" Configuration Overview")]),e._v(" "),n("p",[e._v("There are two types of configurations - static and dynamic. Static configurations are defined in files or environment variables, requiring restarting app server to take effect, whereas dynamic configurations are defined in databases and updates take effect immediately.")]),e._v(" "),n("p",[e._v("Most static configurations are specified in file "),n("em",[e._v("/src/config.ts")]),e._v(". If you need to change, instead of updating "),n("em",[e._v("/src/config.ts")]),e._v(" file, create local file "),n("em",[e._v("/src/config.local.ts")]),e._v(" or environment specific file "),n("em",[e._v("/src/config.<env>.ts")]),e._v(", which is only included when environment variable "),n("em",[e._v("NODE_ENV")]),e._v(" equals "),n("em",[e._v("<env>")]),e._v(". Besides "),n("em",[e._v("ts")]),e._v(", "),n("em",[e._v("js")]),e._v(" and "),n("em",[e._v("json")]),e._v(" file extension are also supported. Content in these files are deeply merged in following ascending precedence")]),e._v(" "),n("ul",[n("li",[e._v("default file "),n("em",[e._v("/src/config.ts")])]),e._v(" "),n("li",[e._v("local file "),n("em",[e._v("/src/config.local.ts")])]),e._v(" "),n("li",[e._v("environment specific file "),n("em",[e._v("/src/config.<env>.ts")])])]),e._v(" "),n("div",{staticClass:"custom-block warning"},[n("p",{staticClass:"custom-block-title"},[e._v("Run build script whenever changing file in /src")]),e._v(" "),n("p",[e._v("Every time a file under "),n("em",[e._v("/src")]),e._v(", including config files, is updated, run "),n("code",[e._v("yarn build")]),e._v(" before restarting "),n("em",[e._v("NotifyBC")]),e._v(" to take effect.")])]),e._v(" "),n("p",[e._v("Dynamic configs are managed using REST "),n("RouterLink",{attrs:{to:"/docs/api-config/"}},[e._v("configuration api")]),e._v(".")],1),e._v(" "),n("div",{staticClass:"custom-block tip"},[n("p",{staticClass:"custom-block-title"},[e._v("ProTipsâ„¢ Why Dynamic Configs?")]),e._v(" "),n("p",[e._v("Dynamic configs are needed in cases such as")]),e._v(" "),n("ul",[n("li",[e._v("to allow define service-specific configs such as message templates")]),e._v(" "),n("li",[e._v("in a multi-node deployment, configs can be generated by one node (typically master) and shared with other nodes")])])])])}),[],!1,null,null,null);i.default=s.exports}}]);