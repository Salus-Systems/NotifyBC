(window.webpackJsonp=window.webpackJsonp||[]).push([[43],{440:function(t,a,s){"use strict";s.r(a);var e=s(42),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"migration-guide"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#migration-guide"}},[t._v("#")]),t._v(" Migration Guide")]),t._v(" "),s("p",[t._v("To migrate from v1 to v2")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("move "),s("em",[t._v("server/config.local.(js|json)")]),t._v(" to "),s("em",[t._v("src/")])])]),t._v(" "),s("li",[s("p",[t._v("move "),s("em",[t._v("server/datasources.local.(js|json)")]),t._v(" to "),s("em",[t._v("src/datasources/db.datasource.local.(js|json)")])])]),t._v(" "),s("li",[s("p",[t._v("move "),s("em",[t._v("server/middleware.*.(js|json) to _src/")]),t._v(" if exists. Reorganize top level properties to "),s("em",[t._v("all")]),t._v(" or "),s("em",[t._v("apiOnly")]),t._v(", where "),s("em",[t._v("all")]),t._v(" applies to all requests including web admin console and "),s("em",[t._v("apiOnly")]),t._v(" applies to API requests only. For example, given")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("module"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  initial"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    compression"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'routes:before'")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    morgan"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      enabled"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("if "),s("em",[t._v("compression")]),t._v(" middleware will be applied to all requests and "),s("em",[t._v("morgan")]),t._v(" will be applied to API requests only, then change the file to")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("module"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("exports "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  all"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    compression"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  apiOnly"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    morgan"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      enabled"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])])]),t._v(" "),s("h2",{attrs:{id:"incompatible-api-changes"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#incompatible-api-changes"}},[t._v("#")]),t._v(" Incompatible API Changes")]),t._v(" "),s("h3",{attrs:{id:"query-parameter-array-syntax"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#query-parameter-array-syntax"}},[t._v("#")]),t._v(" Query parameter array syntax")]),t._v(" "),s("p",[t._v("In v1 array can be specified in query parameter using two formats")]),t._v(" "),s("ol",[s("li",[t._v("by enclosing array elements in square brackets such as "),s("code",[t._v('&additionalServices=["s1","s2]')]),t._v(" in one query parameter")]),t._v(" "),s("li",[t._v("by repeating the query parameters, for example "),s("code",[t._v("&additionalServices=s1&additionalServices=s2")])])]),t._v(" "),s("p",[t._v("In v2 only the latter format is supported.")]),t._v(" "),s("h3",{attrs:{id:"date-time-fields"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#date-time-fields"}},[t._v("#")]),t._v(" Date-Time fields")]),t._v(" "),s("p",[t._v("In v1 date-time fields can be specified in date-only string such as 2020-01-01. In v2 the field must be specified in ISO 8601 extended format such as 2020-01-01T00:00:00Z.")]),t._v(" "),s("h3",{attrs:{id:"return-status-codes"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#return-status-codes"}},[t._v("#")]),t._v(" Return status codes")]),t._v(" "),s("p",[t._v("HTTP response code of success calls to some APIs that don't return important information are changed from 200 to 204")]),t._v(" "),s("ul",[s("li",[t._v("PATCH /notifications/")]),t._v(" "),s("li",[t._v("DELETE /notifications/")])])])}),[],!1,null,null,null);a.default=n.exports}}]);