(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{437:function(t,e,a){"use strict";a.r(e);var s=a(42),n=Object(s.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"installation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#installation"}},[t._v("#")]),t._v(" Installation")]),t._v(" "),a("p",[a("em",[t._v("NotifyBC")]),t._v(" can be installed in 3 ways:")]),t._v(" "),a("ol",[a("li",[a("a",{attrs:{href:"#deploy-locally-from-source-code"}},[t._v("deploying locally from source code")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#deploy-docker-container"}},[t._v("deploying a Docker container")])]),t._v(" "),a("li",[a("a",{attrs:{href:"#deploy-to-kubernetes"}},[t._v("deploying to Kubernetes")])])]),t._v(" "),a("p",[t._v("For small-scale production deployment or for evaluation, both source code and docker container will do. For large-scale production deployment that requires horizontal scalability, the recommendation is one of")]),t._v(" "),a("ul",[a("li",[t._v("deploying to Kubernetes")]),t._v(" "),a("li",[t._v("setting up a load balanced app cluster from source code build, backed by MongoDB.")])]),t._v(" "),a("p",[t._v("To setup a development environment in order to contribute to "),a("em",[t._v("NotifyBC")]),t._v(",\ninstalling from source code is preferred.")]),t._v(" "),a("h2",{attrs:{id:"deploy-locally-from-source-code"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#deploy-locally-from-source-code"}},[t._v("#")]),t._v(" Deploy Locally from Source Code")]),t._v(" "),a("h3",{attrs:{id:"system-requirements"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#system-requirements"}},[t._v("#")]),t._v(" System Requirements")]),t._v(" "),a("ul",[a("li",[t._v("Software\n"),a("ul",[a("li",[t._v("Git")]),t._v(" "),a("li",[a("a",{attrs:{href:"https://nodejs.org",target:"_blank",rel:"noopener noreferrer"}},[t._v("Node.js"),a("OutboundLink")],1),t._v("@>=14.5.0")]),t._v(" "),a("li",[t._v("openssl (if enable HTTPS)")])])]),t._v(" "),a("li",[t._v("Services\n"),a("ul",[a("li",[t._v("MongoDB, optional but recommended for production")]),t._v(" "),a("li",[t._v("A standard SMTP server to deliver outgoing email, optional but recommended for production.")]),t._v(" "),a("li",[t._v("A tcp proxy server such as "),a("a",{attrs:{href:"http://nginx.org/en/docs/stream/ngx_stream_proxy_module.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("nginx stream proxy"),a("OutboundLink")],1),t._v(" if list-unsubscribe by email is needed and "),a("em",[t._v("NotifyBC")]),t._v(" server cannot expose port 25 to internet")]),t._v(" "),a("li",[t._v("A SMS service provider account if needs to enable SMS channel. The supported service providers are\n"),a("ul",[a("li",[t._v("Twilio (default)")]),t._v(" "),a("li",[t._v("Swift")])])]),t._v(" "),a("li",[t._v("SiteMinder, if need to allow SiteMinder authenticated user request")]),t._v(" "),a("li",[t._v("OIDC provide, if need to allow OIDC authenticated user request")])])]),t._v(" "),a("li",[t._v("Network and Permissions\n"),a("ul",[a("li",[t._v("Minimum runtime firewall requirements:\n"),a("ul",[a("li",[t._v("outbound to your ISP DNS server")]),t._v(" "),a("li",[t._v("outbound to any on port 80 and 443 in order to run build scripts and send SMS messages")]),t._v(" "),a("li",[t._v("outbound to any on SMTP port 25 if using direct mail; for SMTP relay, outbound to your configured SMTP server and port only")]),t._v(" "),a("li",[t._v("inbound to listening port (3000 by default) from other authorized server ips")]),t._v(" "),a("li",[t._v("if "),a("em",[t._v("NotifyBC")]),t._v(" instance will handle anonymous subscription from client browser, the listening port should be open to internet either directly or indirectly through a reverse proxy; If "),a("em",[t._v("NotifyBC")]),t._v(" instance will only handle SiteMinder authenticated webapp requests, the listening port should NOT be open to internet. Instead, it should only open to SiteMinder web agent reverse proxy.")])])]),t._v(" "),a("li",[t._v("If list-unsubscribe by email is needed, then one of the following must be met\n"),a("ul",[a("li",[a("em",[t._v("NotifyBC")]),t._v(" can bind to port 25 opening to internet")]),t._v(" "),a("li",[t._v("a tcp proxy server of which port 25 is open to internet. This proxy server can reach "),a("em",[t._v("NotifyBC")]),t._v(" on a tcp port.")])])])])])]),t._v(" "),a("h3",{attrs:{id:"installation-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#installation-2"}},[t._v("#")]),t._v(" Installation")]),t._v(" "),a("p",[t._v("Run following commands")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone https://github.com/bcgov/NotifyBC.git\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" NotifyBC\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" i -g "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" build\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" start\n")])])]),a("p",[t._v("If successful, you will see following output")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("...\nServer is running at http://0.0.0.0:3000\n")])])]),a("p",[t._v("Now browse to "),a("a",{attrs:{href:"http://localhost:3000",target:"_blank"}},[t._v("http://localhost:3000")]),t._v(" the page displays NotifyBC Web Console.")]),t._v(" "),a("p",[t._v("The above commands installs the "),a("em",[t._v("main")]),t._v(" version, i.e. main branch tip of "),a("em",[t._v("NotifyBC")]),t._v(" GitHub repository. To install a specific version, say "),a("em",[t._v("v2.1.0")]),t._v(", run")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout tags/v2.1.0 -b v2.1.0\n")])])]),a("p",[t._v("after "),a("code",[t._v("cd NotifyBC")]),t._v(". A list of versions can be found "),a("a",{attrs:{href:"https://github.com/bcgov/NotifyBC/tags",target:"_blank",rel:"noopener noreferrer"}},[t._v("here"),a("OutboundLink")],1),t._v(".")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("install from behind firewall")]),t._v(" "),a("p",[t._v("If you want to install on a server behind firewall which restricts internet connection, you can work around the firewall as long as you have access to a http(s) forward proxy server. Assuming the proxy server is http://my_proxy:8080 which proxies both http and https requests, to use it:")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("For Linux")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("http_proxy")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("http://my_proxy:8080\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("https_proxy")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("http://my_proxy:8080\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global url."),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://"')]),t._v(".insteadOf git://\n")])])])]),t._v(" "),a("li",[a("p",[t._v("For Windows")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global http.proxy http://my_proxy:8080\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global url."),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://"')]),t._v(".insteadOf git://\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" config "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v(" proxy http://my_proxy:8080\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" i -g "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" config "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v(" proxy http://my_proxy:8080\n")])])])])])]),t._v(" "),a("h4",{attrs:{id:"install-windows-service"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#install-windows-service"}},[t._v("#")]),t._v(" Install Windows Service")]),t._v(" "),a("p",[t._v("After get the app running interactively, if your server is Windows and you want to install the app as a Windows service, run")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("npm install -g node-windows\nnpm link node-windows\nnode windows-service.js\n")])])]),a("p",[t._v("This will create and start service "),a("em",[t._v("notifyBC")]),t._v(". To change service name, modify file "),a("em",[t._v("windows-service.js")]),t._v(" before running it. See "),a("a",{attrs:{href:"https://github.com/coreybutler/node-windows",target:"_blank",rel:"noopener noreferrer"}},[t._v("node-windows"),a("OutboundLink")],1),t._v(" for other operations such as uninstalling the service.")]),t._v(" "),a("h2",{attrs:{id:"deploy-docker-container"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#deploy-docker-container"}},[t._v("#")]),t._v(" Deploy Docker Container")]),t._v(" "),a("p",[t._v("If you have git and Docker installed, you can run following command to deploy "),a("em",[t._v("NotifyBC")]),t._v(" Docker container:")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone https://github.com/bcgov/NotifyBC.git\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" NotifyBC\ndocker build -t notify-bc "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\ndocker run -p "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3000")]),t._v(":3000 notify-bc\n")])])]),a("p",[t._v("If successful, similar output is displayed as in source code installation.")]),t._v(" "),a("h2",{attrs:{id:"deploy-to-kubernetes"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#deploy-to-kubernetes"}},[t._v("#")]),t._v(" Deploy to Kubernetes")]),t._v(" "),a("p",[a("em",[t._v("NotifyBC")]),t._v(" provides a "),a("a",{attrs:{href:"https://github.com/orgs/bcgov/packages/container/package/notify-bc",target:"_blank",rel:"noopener noreferrer"}},[t._v("container package"),a("OutboundLink")],1),t._v(" in GitHub Container Registry and a "),a("a",{attrs:{href:"https://helm.sh/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Helm"),a("OutboundLink")],1),t._v(" chart to facilitate Deploying to Kubernetes. Azure AKS and OpenShift are the two tested platforms. Other Kubernetes platforms are likely to work subject to customizations. Before deploying to AKS, "),a("a",{attrs:{href:"https://docs.microsoft.com/en-us/azure/aks/ingress-basic#create-an-ingress-controller",target:"_blank",rel:"noopener noreferrer"}},[t._v("create an ingress controller\n"),a("OutboundLink")],1),t._v(".")]),t._v(" "),a("p",[t._v("The deployment can be initiated from localhost or automated by CI service such as Jenkins. Regardless, at the initiator's side following software needs to be installed:")]),t._v(" "),a("ul",[a("li",[t._v("git")]),t._v(" "),a("li",[t._v("Platform-specific CLI such as "),a("a",{attrs:{href:"https://docs.microsoft.com/en-us/cli/azure/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Azure CLI"),a("OutboundLink")],1),t._v(" or "),a("a",{attrs:{href:"https://docs.openshift.org/latest/cli_reference/index.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("OpenShift CLI"),a("OutboundLink")],1)]),t._v(" "),a("li",[a("a",{attrs:{href:"https://helm.sh/docs/intro/install/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Helm CLI"),a("OutboundLink")],1)])]),t._v(" "),a("p",[t._v("To install,")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("Follow your platform's instruction to login to the platform. For AKS, run "),a("code",[t._v("az login")]),t._v(" and "),a("code",[t._v("az aks get-credentials")]),t._v("; for OpenShift, run "),a("code",[t._v("oc login")])])]),t._v(" "),a("li",[a("p",[t._v("Run")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone https://github.com/bcgov/NotifyBC.git\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" NotifyBC\nhelm "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" -gf helm/platform-specific/"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("platform"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(".yaml helm\n")])])]),a("p",[t._v("replace <platform> with "),a("em",[t._v("openshift")]),t._v(" or "),a("em",[t._v("aks")]),t._v(" depending on your platform.")]),t._v(" "),a("p",[t._v("The above commands create following artifacts:")]),t._v(" "),a("ul",[a("li",[t._v("A MongoDB cluster with 2 nodes and 1 arbiter, each implemented as a stateful set")]),t._v(" "),a("li",[t._v("Two deployments - "),a("em",[t._v("notify-bc-app")]),t._v(" and "),a("em",[t._v("notify-bc-cron")])]),t._v(" "),a("li",[t._v("Four services - "),a("em",[t._v("notify-bc")]),t._v(", "),a("em",[t._v("notify-bc-smtp")]),t._v(", "),a("em",[t._v("mongodb-headless")]),t._v(" and "),a("em",[t._v("mongodb-arbiter-headless")])]),t._v(" "),a("li",[t._v("Two PVCs each for one MongoDB node")]),t._v(" "),a("li",[t._v("Two config maps - "),a("em",[t._v("notify-bc")]),t._v(" and "),a("em",[t._v("mongodb-scripts")])]),t._v(" "),a("li",[t._v("Two service accounts - "),a("em",[t._v("notify-bc")]),t._v(" and "),a("em",[t._v("mongodb")])]),t._v(" "),a("li",[t._v("One more more secrets, with the most important one being "),a("em",[t._v("mongodb")]),t._v(", containing MongoDB connection credentials")]),t._v(" "),a("li",[t._v("On AKS,\n"),a("ul",[a("li",[t._v("a "),a("em",[t._v("notify-bc")]),t._v(" ingress")])])]),t._v(" "),a("li",[t._v("On OpenShift,\n"),a("ul",[a("li",[t._v("2 routes - "),a("em",[t._v("notify-bc-web")]),t._v(" and "),a("em",[t._v("notify-bc-smtp")])])])])])])]),t._v(" "),a("p",[t._v("To upgrade,")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("helm upgrade "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("release-name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" -f helm/platform-specific/"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("platform"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(".yaml --set mongodb.auth.rootPassword"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("mongodb-root-password"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" --set mongodb.auth.replicaSetKey"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("mongodb-replica-set-key"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" --set mongodb.auth.password"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("mongodb-password"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" helm\n")])])]),a("p",[t._v("replace <release-name> with installed helm release name and <platform> with "),a("em",[t._v("openshift")]),t._v(" or "),a("em",[t._v("aks")]),t._v(" depending on your platform. <mongodb-root-password>, <mongodb-replica-set-key> and <mongodb-password> can be found in "),a("em",[t._v("mongodb")]),t._v(" secret.")]),t._v(" "),a("p",[t._v("To uninstall,")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("helm uninstall "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("release-name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),a("p",[t._v("replace <release-name> with installed helm release name.")]),t._v(" "),a("h3",{attrs:{id:"customizations"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#customizations"}},[t._v("#")]),t._v(" Customizations")]),t._v(" "),a("p",[t._v("Various customizations can be made to chart. Some are platform dependent. To customize, first create a file with extension "),a("em",[t._v(".local.yaml")]),t._v(". The rest of the document assumes the file is "),a("em",[t._v("helm/values.local.yaml")]),t._v(". Then add customized values to the file. To apply customization, add "),a("code",[t._v("-f helm/values.local.yaml")]),t._v(" to the helm command after "),a("code",[t._v("-f helm/platform-specific/<platform>.yaml")]),t._v(". For example, to run "),a("code",[t._v("helm install")]),t._v(" with customization,")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("helm "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" -gf helm/platform-specific/"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("platform"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(".yaml -f helm/values.local.yaml helm\n")])])]),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("Backup "),a("i",[t._v("helm/values.local.yaml")])]),t._v(" "),a("p",[t._v("Backup "),a("em",[t._v("helm/values.local.yaml")]),t._v(" to a private secured SCM is highly recommended, especially for production environment.")])]),t._v(" "),a("p",[t._v("Following are some example customizations.")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("To set hostname on AKS,")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# in file helm/values.local.yaml")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ingress")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("hosts")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("host")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" myNotifyBC.myOrg.com\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("paths")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("path")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /\n")])])])]),t._v(" "),a("li",[a("p",[t._v("Use "),a("a",{attrs:{href:"https://docs.microsoft.com/en-us/azure/aks/ingress-tls",target:"_blank",rel:"noopener noreferrer"}},[t._v("Let's Encrypt on AKS"),a("OutboundLink")],1),t._v(". After following the instructions in the link, add following ingress customizations to file "),a("em",[t._v("helm/values.local.yaml")])]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# in file helm/values.local.yaml")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ingress")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("annotations")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("cert-manager.io/cluster-issuer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" letsencrypt\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("tls")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("secretName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" tls"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("secret\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("hosts")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" notify"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("bc.local\n")])])])]),t._v(" "),a("li",[a("p",[t._v("Route host names on Openshift are by default auto-generated. To set to fix values")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# in file helm/values.local.yaml")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("route")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("web")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("host")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'myNotifyBC.myOrg.com'")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("smtp")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("host")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'smtp.myNotifyBC.myOrg.com'")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("To add certificates to OpenShift web route")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# in file helm/values.local.yaml")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("route")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("web")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("tls")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("caCertificate")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("---")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("BEGIN CERTIFICATE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("---")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("...")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("---")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("END CERTIFICATE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("---")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("certificate")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("---")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("BEGIN CERTIFICATE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("---")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("...")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("---")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("END CERTIFICATE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("---")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("insecureEdgeTerminationPolicy")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Redirect\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("key")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("---")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("BEGIN PRIVATE KEY"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("---")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("...")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("---")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("END PRIVATE KEY"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("---")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("To update "),a("em",[t._v("config.local.js")]),t._v(" in config map,")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# in file helm/values.local.yaml")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("configMap")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("config.local.js")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("\n    module.exports = "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("httpHost")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'https://myNotifyBC.myOrg.com'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("internalHttpHost")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'http://{{include \"NotifyBC.fullname\" .}}:{{ .Values.service.web.port }}'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("inboundSmtpServer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("listeningSmtpPort")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2525")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("options")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" if not (.Values.service.smtp.enabled) "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("secure")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n          "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" end "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),a("li",[a("p",[t._v("MongoDb")]),t._v(" "),a("p",[a("em",[t._v("NotifyBC")]),t._v(" chart depends on "),a("a",{attrs:{href:"https://github.com/bitnami/charts/tree/master/bitnami/mongodb",target:"_blank",rel:"noopener noreferrer"}},[t._v("Bitnami MongoDB chart"),a("OutboundLink")],1),t._v(" for MongoDB database provisioning. All documented parameters are customizable by adding "),a("em",[t._v("mongodb.")]),t._v(" prefix. For example, to change "),a("em",[t._v("architecture")]),t._v(" to "),a("em",[t._v("standalone")])]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# in file helm/values.local.yaml")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("mongodb")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("architecture")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" standalone\n")])])]),a("p",[t._v("Bitnami MongoDB uses Docker Hub for docker registry. Rate limit imposed by Docker Hub can cause runtime problems. If your organization has JFrog artifactory, you can change the registry")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# in file helm/values.local.yaml")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("mongodb")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("registry")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" <artifactory.myOrg.com"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("pullSecrets")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" <docker"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("pull"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("secret"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n")])])]),a("p",[t._v("The above settings assume you have setup secret <docker-pull-secret> to access <artifactory.myOrg.com>.")])])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("Enable scheduled MongoDB backup CronJob")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# in file helm/values.local.yaml")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("cronJob")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("enabled")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("schedule")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1 0 * * *'")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("retentionDays")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("timeZone")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" UTC\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("persistence")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("size")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 5Gi\n")])])]),a("p",[t._v("where")]),t._v(" "),a("ul",[a("li",[t._v("enabled: whether to enable the MongoDB backup CronJob or not; default to "),a("code",[t._v("false")])]),t._v(" "),a("li",[t._v("schedule: the Unix crontab schedule; default to "),a("code",[t._v("'1 0 * * *'")]),t._v(" which runs daily at 12:01AM")]),t._v(" "),a("li",[t._v("retentionDays: how many days the backup is retained; default to "),a("code",[t._v("7")])]),t._v(" "),a("li",[t._v("timeZone: the Unix TZ environment variable; default to "),a("code",[t._v("UTC")])]),t._v(" "),a("li",[t._v("persistence size: size of PVC; default to "),a("code",[t._v("5Gi")])])]),t._v(" "),a("p",[t._v("The CronJob backs up MongoDB to a PVC named after the chart with suffix "),a("em",[t._v("-cronjob-mongodb-backup")]),t._v(" and purges backups that are older than "),a("em",[t._v("retentionDays")]),t._v(".")])]),t._v(" "),a("li",[a("p",[a("em",[t._v("NotifyBC")]),t._v(" image tag defaults to latest published version. To change to "),a("em",[t._v("latest")]),t._v(", i.e. tip of the "),a("em",[t._v("main branch")]),t._v(",")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# in file helm/values.local.yaml")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("tag")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" latest\n")])])])])]),t._v(" "),a("h2",{attrs:{id:"deploy-to-openshift-deprecated"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#deploy-to-openshift-deprecated"}},[t._v("#")]),t._v(" Deploy to OpenShift (deprecated)")]),t._v(" "),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[t._v("Use Helm for OpenShift")]),t._v(" "),a("p",[t._v("The OpenShift template documented in the rest of this section is deprecated and will be removed in next major release. Please follow "),a("a",{attrs:{href:"#deploy-to-kubernetes"}},[t._v("Deploy to Kubernetes")]),t._v(" to install using Helm. To migrate from OpenShift template, follow "),a("RouterLink",{attrs:{to:"/docs/miscellaneous/migration.html#openshift-template-to-helm"}},[t._v("OpenShift template to Helm")]),t._v(".")],1)]),t._v(" "),a("p",[a("em",[t._v("NotifyBC")]),t._v(" supports deployment to OpenShift Origin of minimum version 1.5, or other compatible platforms such as OpenShift Container Platform of matching version. "),a("a",{attrs:{href:"https://github.com/bcgov/NotifyBC/blob/main/.opensift-templates",target:"_blank",rel:"noopener noreferrer"}},[t._v("OpenShift instant app templates"),a("OutboundLink")],1),t._v(" have been created to facilitate build and deployment. This template adopts "),a("a",{attrs:{href:"https://docs.openshift.org/latest/dev_guide/builds.html#using-secrets-s2i-strategy",target:"_blank",rel:"noopener noreferrer"}},[t._v("source-to-image strategy"),a("OutboundLink")],1),t._v(" with "),a("a",{attrs:{href:"https://docs.openshift.org/latest/dev_guide/builds.html#binary-source",target:"_blank",rel:"noopener noreferrer"}},[t._v("binary source"),a("OutboundLink")],1),t._v(" input and supports "),a("a",{attrs:{href:"https://docs.openshift.org/latest/dev_guide/builds.html#incremental-builds",target:"_blank",rel:"noopener noreferrer"}},[t._v("incremental builds"),a("OutboundLink")],1),t._v(".")]),t._v(" "),a("p",[t._v("To deploy to OpenShift, you need to have access to relevant OpenShift projects with minimum edit role. This implies you know and have access to OpenShift web console as identified by "),a("em",[t._v("<openshift-console-url>")]),t._v(" below.")]),t._v(" "),a("p",[t._v("OpenShift is expected to be setup this way:")]),t._v(" "),a("ul",[a("li",[t._v("1 project for build. This project is identified by "),a("em",[t._v("<yourprojectname-tools>")]),t._v(" below. All build related activities take place in this project.")]),t._v(" "),a("li",[t._v("1 or more projects for runtime environments such as "),a("em",[t._v("dev")]),t._v(", "),a("em",[t._v("test")]),t._v(" etc, identified by "),a("em",[t._v("<yourprojectname-<env>>")]),t._v(" below. All deployment activities and runtime artifacts are contained in respective projects to make an environment self-sufficient.")])]),t._v(" "),a("p",[t._v("The deployment can be initiated from localhost or automated by CI service such as Jenkins. Regardless, at the initiator's side following software needs to be installed:")]),t._v(" "),a("ul",[a("li",[t._v("git")]),t._v(" "),a("li",[a("a",{attrs:{href:"https://docs.openshift.org/latest/cli_reference/index.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("OpenShift CLI"),a("OutboundLink")],1)])]),t._v(" "),a("p",[t._v("If using Jenkins, all the software are pre-installed on OpenShift provided Jenkins instant-app template so it is the preferred CI environment. Instructions below assumes OpenShift Jenkins is used. OpenShift Jenkins should be created in project "),a("em",[t._v("<yourprojectname-tools>")]),t._v(".")]),t._v(" "),a("h3",{attrs:{id:"hosting-environment-setup"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#hosting-environment-setup"}},[t._v("#")]),t._v(" Hosting Environment Setup")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("Install the templates")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone https://github.com/bcgov/NotifyBC.git\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" NotifyBC\noc login -u "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("username"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" -p "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("password"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("openshift-console-url"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\noc create -f .openshift-templates/notify-bc-build.yml -n "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("yourprojectname-tools"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\noc create -f .openshift-templates/notify-bc.yml -n "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("yourprojectname-"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("env"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v("\n")])])]),a("p",[t._v("After this step you will find an instant app template called "),a("em",[t._v("notify-bc-build")]),t._v(" available in the "),a("em",[t._v("<yourprojectname-tools>")]),t._v(" project and "),a("em",[t._v("notify-bc")]),t._v(" in the "),a("em",[t._v("<yourprojectname-<env>>")]),t._v(" project.")])])]),t._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[t._v("create OpenShift apps by clicking "),a("em",[t._v("Add to Project")]),t._v(" in web console of respective projects, select JavaScript in languages catalog, and click either "),a("em",[t._v("notify-bc-build")]),t._v(" or "),a("em",[t._v("notify-bc")]),t._v(" template. Adjust parameters as you see fit.")]),t._v(" "),a("li",[t._v("(optional) update instance-specific "),a("RouterLink",{attrs:{to:"/docs/config-overview/"}},[t._v("configuration")]),t._v(" files by modifying configMap "),a("em",[t._v("notify-bc")]),t._v(". To do so, in web console of a runtime environment project, click "),a("em",[t._v("Resources > Config Maps > notify-bc > Actions > Edit")]),t._v(". Each config file corresponds to an item in configMap with key being the file name.")],1)]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("backup config files")]),t._v(" "),a("p",[t._v("Backup config files to a private secured SCM outside of OpenShift is highly recommended, especially for production environment.")])]),t._v(" "),a("h3",{attrs:{id:"build"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#build"}},[t._v("#")]),t._v(" Build")]),t._v(" "),a("p",[t._v("To build runtime image manually from localhost, run")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("oc start-build notify-bc --follow --wait --from-dir"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(". -n "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("yourprojectname-tools"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),a("p",[t._v("If build is successful, you will find image "),a("em",[t._v("<yourprojectname-tools>/notify-bc:latest")]),t._v(" is updated.")]),t._v(" "),a("p",[t._v("To initiate the build from Jenkins, create a new Freestyle project. Set "),a("em",[t._v("Source Code Management")]),t._v(" to Git repository https://github.com/bcgov/NotifyBC.git and add a "),a("em",[t._v("Execute Shell")]),t._v(" build step with the command.")]),t._v(" "),a("p",[t._v("Proper authorization is needed for Jenkins to access OpenShift. The service account used by Jenkins has to be granted edit role in all projects by running")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("oc policy add-role-to-user edit system:serviceaccount:"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("yourprojectname-tools"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(":"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("jenkins-service-name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" -n "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("yourprojectname-tools"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\noc policy add-role-to-user edit system:serviceaccount:"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("yourprojectname-tools"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(":"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("jenkins-service-name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" -n "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("yourprojectname-"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("env"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v("\n")])])]),a("p",[t._v("replace "),a("em",[t._v("<jenkins-service-name>")]),t._v(" with the jenkins service name. In some editions of OpenShift, "),a("em",[t._v("<jenkins-service-name>")]),t._v(" is fixed to "),a("em",[t._v("default")]),t._v(". To find exact Jenkins service account, add following line to Jenkins shell build step and inspect its build output")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("oc "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("whoami")]),t._v("\n")])])]),a("h3",{attrs:{id:"deploy"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#deploy"}},[t._v("#")]),t._v(" Deploy")]),t._v(" "),a("p",[t._v("Deployment is achieved through image tagging. This guarantees the image deployed to different runtime environments are binary identical. To deploy manually from localhost, run")]),t._v(" "),a("div",{staticClass:"language-sh extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("oc tag "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("yourprojectname-tools"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("/notify-bc:latest "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("yourprojectname-"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("env"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),t._v("/notify-bc:latest\n")])])]),a("p",[t._v("If the deployment is successful, you can launch "),a("em",[t._v("NotifyBC")]),t._v(" from the URL provided in "),a("em",[t._v("<yourprojectname-<env>>")]),t._v(" project.")]),t._v(" "),a("p",[t._v("To initiate the deployment from Jenkins, add the above command to the build command in Jenkins.")]),t._v(" "),a("h3",{attrs:{id:"change-propagation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#change-propagation"}},[t._v("#")]),t._v(" Change Propagation")]),t._v(" "),a("p",[t._v("To promote runtime image from one environment to another, for example from "),a("em",[t._v("dev")]),t._v(" to "),a("em",[t._v("test")]),t._v(", run")]),t._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("oc tag <yourprojectname-tools>/notify-bc:latest <yourprojectname-test>/notify-bc:latest <yourprojectname-tools>/notify-bc:test\n")])])]),a("p",[t._v("The above command will deploy the latest (which should also be dev) runtime image to "),a("em",[t._v("test")]),t._v(" env. The purpose of tagging runtime image of "),a("em",[t._v("test")]),t._v(" env in both <yourprojectname-test>/notify-bc:latest and <yourprojectname-tools>/notify-bc:test is to use <yourprojectname-tools>/notify-bc:test as backup such that in case the image stream <yourprojectname-test>/notify-bc, which is used by "),a("em",[t._v("test")]),t._v(" runtime pods, is deleted inadvertently, it can be recovered from <yourprojectname-tools>/notify-bc:test.")])])}),[],!1,null,null,null);e.default=n.exports}}]);