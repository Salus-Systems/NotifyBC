(window.webpackJsonp=window.webpackJsonp||[]).push([[31],{429:function(t,e,i){"use strict";i.r(e);var n=i(42),s=Object(n.a)({},(function(){var t=this,e=t.$createElement,i=t._self._c||e;return i("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[i("div",{staticClass:"custom-block tip"},[i("p",{staticClass:"custom-block-title"},[t._v("Helm Chart Configurations")]),t._v(" "),i("p",[t._v("The document pages in this section cover "),i("em",[t._v("NoitfyBC")]),t._v(" app level configurations only.\nIf your "),i("em",[t._v("NotifyBC")]),t._v(" is deployed to Kubernetes using Helm, you can also "),i("RouterLink",{attrs:{to:"/docs/getting-started/installation.html#customizations"}},[t._v("customize")]),t._v(" infrastructure level configurations.")],1)]),t._v(" "),i("h1",{attrs:{id:"configuration-overview"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#configuration-overview"}},[t._v("#")]),t._v(" Configuration Overview")]),t._v(" "),i("p",[t._v("There are two types of configurations - static and dynamic. Static configurations are defined in files or environment variables, requiring restarting "),i("em",[t._v("NotifyBC")]),t._v(" to take effect, whereas dynamic configurations are defined in databases and updates take effect immediately.")]),t._v(" "),i("h2",{attrs:{id:"static-configurations"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#static-configurations"}},[t._v("#")]),t._v(" Static Configurations")]),t._v(" "),i("p",[t._v("Most static configurations are specified in file "),i("em",[t._v("/src/config.ts")]),t._v(". If you need to change, instead of updating "),i("em",[t._v("/src/config.ts")]),t._v(" file, create local file "),i("em",[t._v("/src/config.local.ts")]),t._v(" or environment specific file "),i("em",[t._v("/src/config.<env>.ts")]),t._v(", which is only included when environment variable "),i("em",[t._v("NODE_ENV")]),t._v(" equals "),i("em",[t._v("<env>")]),t._v(". Besides "),i("em",[t._v("ts")]),t._v(", "),i("em",[t._v("js")]),t._v(" and "),i("em",[t._v("json")]),t._v(" file extension are also supported. Content in these files are deeply merged in following ascending precedence")]),t._v(" "),i("ul",[i("li",[t._v("default file "),i("em",[t._v("/src/config.ts")])]),t._v(" "),i("li",[t._v("local file "),i("em",[t._v("/src/config.local.ts")])]),t._v(" "),i("li",[t._v("environment specific file "),i("em",[t._v("/src/config.<env>.ts")])])]),t._v(" "),i("div",{staticClass:"custom-block warning"},[i("p",{staticClass:"custom-block-title"},[t._v("Run build script whenever changing file in /src")]),t._v(" "),i("p",[t._v("Every time a file under "),i("em",[t._v("/src")]),t._v(", including config files, is updated, run "),i("code",[t._v("yarn build")]),t._v(" before restarting "),i("em",[t._v("NotifyBC")]),t._v(" to take effect.")])]),t._v(" "),i("p",[t._v("Following configs should be customized per installation")]),t._v(" "),i("ul",[i("li",[i("RouterLink",{attrs:{to:"/docs/config/adminIpList.html"}},[t._v("Admin IP List")])],1),t._v(" "),i("li",[i("RouterLink",{attrs:{to:"/docs/config/reverseProxyIpLists.html"}},[t._v("Reverse Proxy IP Lists")])],1),t._v(" "),i("li",[i("RouterLink",{attrs:{to:"/docs/config/httpHost.html"}},[t._v("HTTP Host")])],1),t._v(" "),i("li",[i("RouterLink",{attrs:{to:"/docs/config/smtp.html"}},[t._v("SMTP")])],1)]),t._v(" "),i("p",[t._v("In addition, if installing from source code")]),t._v(" "),i("ul",[i("li",[i("RouterLink",{attrs:{to:"/docs/config/database.html"}},[t._v("Database")])],1),t._v(" "),i("li",[i("RouterLink",{attrs:{to:"/docs/config/internalHttpHost.html"}},[t._v("Internal HTTP Host")])],1)]),t._v(" "),i("p",[t._v("Customizing other configs only if needed.")]),t._v(" "),i("h2",{attrs:{id:"dynamic-configurations"}},[i("a",{staticClass:"header-anchor",attrs:{href:"#dynamic-configurations"}},[t._v("#")]),t._v(" Dynamic Configurations")]),t._v(" "),i("p",[t._v("Dynamic configs are managed using REST "),i("RouterLink",{attrs:{to:"/docs/api-config/"}},[t._v("configuration api")]),t._v(".")],1),t._v(" "),i("div",{staticClass:"custom-block tip"},[i("p",{staticClass:"custom-block-title"},[t._v("Why Dynamic Configs?")]),t._v(" "),i("p",[t._v("Dynamic configs are needed in cases such as")]),t._v(" "),i("ul",[i("li",[t._v("to allow define service-specific configs such as message templates")]),t._v(" "),i("li",[t._v("in a multi-node deployment, configs can be generated by one node (typically master) and shared with other nodes")])])])])}),[],!1,null,null,null);e.default=s.exports}}]);