(window.webpackJsonp=window.webpackJsonp||[]).push([[39],{436:function(t,a,e){"use strict";e.r(a);var s=e(42),n=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"installation"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#installation"}},[t._v("#")]),t._v(" Installation")]),t._v(" "),e("p",[e("em",[t._v("NotifyBC")]),t._v(" can be installed in 3 ways:")]),t._v(" "),e("ol",[e("li",[e("a",{attrs:{href:"#deploy-locally-from-source-code"}},[t._v("Deploy Locally from Source Code")])]),t._v(" "),e("li",[e("a",{attrs:{href:"#deploy-docker-container"}},[t._v("Deploy Docker Container")])]),t._v(" "),e("li",[e("a",{attrs:{href:"#deploy-to-kubernetes"}},[t._v("Deploy to Kubernetes")])])]),t._v(" "),e("p",[t._v("For small-scale production deployment or for evaluation, both source code and docker container will do. For large-scale production deployment that requires horizontal scalability, the recommendation is one of")]),t._v(" "),e("ul",[e("li",[t._v("deploying to Kubernetes")]),t._v(" "),e("li",[t._v("setting up a load balanced app cluster from source code build, backed by MongoDB.")])]),t._v(" "),e("p",[t._v("To setup a development environment in order to contribute to "),e("em",[t._v("NotifyBC")]),t._v(",\ninstalling from source code is preferred.")]),t._v(" "),e("h2",{attrs:{id:"deploy-locally-from-source-code"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#deploy-locally-from-source-code"}},[t._v("#")]),t._v(" Deploy Locally from Source Code")]),t._v(" "),e("h3",{attrs:{id:"system-requirements"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#system-requirements"}},[t._v("#")]),t._v(" System Requirements")]),t._v(" "),e("ul",[e("li",[t._v("Software\n"),e("ul",[e("li",[t._v("Git")]),t._v(" "),e("li",[e("a",{attrs:{href:"https://nodejs.org",target:"_blank",rel:"noopener noreferrer"}},[t._v("Node.js"),e("OutboundLink")],1),t._v("@>=14.5.0")]),t._v(" "),e("li",[t._v("openssl (if enable HTTPS)")])])]),t._v(" "),e("li",[t._v("Services\n"),e("ul",[e("li",[t._v("MongoDB, optional but recommended for production")]),t._v(" "),e("li",[t._v("A standard SMTP server to deliver outgoing email, optional but recommended for production.")]),t._v(" "),e("li",[t._v("A tcp proxy server such as "),e("a",{attrs:{href:"http://nginx.org/en/docs/stream/ngx_stream_proxy_module.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("nginx stream proxy"),e("OutboundLink")],1),t._v(" if list-unsubscribe by email is needed and "),e("em",[t._v("NotifyBC")]),t._v(" server cannot expose port 25 to internet")]),t._v(" "),e("li",[t._v("A SMS service provider account if needs to enable SMS channel. The supported service providers are\n"),e("ul",[e("li",[t._v("Twilio (default)")]),t._v(" "),e("li",[t._v("Swift")])])]),t._v(" "),e("li",[t._v("SiteMinder, if need to allow SiteMinder authenticated user request")]),t._v(" "),e("li",[t._v("OIDC provide, if need to allow OIDC authenticated user request")])])]),t._v(" "),e("li",[t._v("Network and Permissions\n"),e("ul",[e("li",[t._v("Minimum runtime firewall requirements:\n"),e("ul",[e("li",[t._v("outbound to your ISP DNS server")]),t._v(" "),e("li",[t._v("outbound to any on port 80 and 443 in order to run build scripts and send SMS messages")]),t._v(" "),e("li",[t._v("outbound to any on SMTP port 25 if using direct mail; for SMTP relay, outbound to your configured SMTP server and port only")]),t._v(" "),e("li",[t._v("inbound to listening port (3000 by default) from other authorized server ips")]),t._v(" "),e("li",[t._v("if "),e("em",[t._v("NotifyBC")]),t._v(" instance will handle anonymous subscription from client browser, the listening port should be open to internet either directly or indirectly through a reverse proxy; If "),e("em",[t._v("NotifyBC")]),t._v(" instance will only handle SiteMinder authenticated webapp requests, the listening port should NOT be open to internet. Instead, it should only open to SiteMinder web agent reverse proxy.")])])]),t._v(" "),e("li",[t._v("If list-unsubscribe by email is needed, then one of the following must be met\n"),e("ul",[e("li",[e("em",[t._v("NotifyBC")]),t._v(" can bind to port 25 opening to internet")]),t._v(" "),e("li",[t._v("a tcp proxy server of which port 25 is open to internet. This proxy server can reach "),e("em",[t._v("NotifyBC")]),t._v(" on a tcp port.")])])])])])]),t._v(" "),e("h3",{attrs:{id:"installation-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#installation-2"}},[t._v("#")]),t._v(" Installation")]),t._v(" "),e("p",[t._v("Run following commands")]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone https://github.com/bcgov/NotifyBC.git\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" NotifyBC\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" i -g "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("&&")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" build\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" start\n")])])]),e("p",[t._v("If successful, you will see following output")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("...\nServer is running at http://0.0.0.0:3000\n")])])]),e("p",[t._v("Now browse to "),e("a",{attrs:{href:"http://localhost:3000",target:"_blank"}},[t._v("http://localhost:3000")]),t._v(" the page displays NotifyBC Web Console.")]),t._v(" "),e("p",[t._v("The above commands installs the "),e("em",[t._v("main")]),t._v(" version, i.e. main branch tip of "),e("em",[t._v("NotifyBC")]),t._v(" GitHub repository. To install a specific version, say "),e("em",[t._v("v2.1.0")]),t._v(", run")]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout tags/v2.1.0 -b v2.1.0\n")])])]),e("p",[t._v("after "),e("code",[t._v("cd NotifyBC")]),t._v(". A list of versions can be found "),e("a",{attrs:{href:"https://github.com/bcgov/NotifyBC/tags",target:"_blank",rel:"noopener noreferrer"}},[t._v("here"),e("OutboundLink")],1),t._v(".")]),t._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("install from behind firewall")]),t._v(" "),e("p",[t._v("If you want to install on a server behind firewall which restricts internet connection, you can work around the firewall as long as you have access to a http(s) forward proxy server. Assuming the proxy server is http://my_proxy:8080 which proxies both http and https requests, to use it:")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("For Linux")]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("http_proxy")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("http://my_proxy:8080\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("https_proxy")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("http://my_proxy:8080\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global url."),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://"')]),t._v(".insteadOf git://\n")])])])]),t._v(" "),e("li",[e("p",[t._v("For Windows")]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global http.proxy http://my_proxy:8080\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global url."),e("span",{pre:!0,attrs:{class:"token string"}},[t._v('"https://"')]),t._v(".insteadOf git://\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" config "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v(" proxy http://my_proxy:8080\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" i -g "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" config "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("set")]),t._v(" proxy http://my_proxy:8080\n")])])])])])]),t._v(" "),e("h4",{attrs:{id:"install-windows-service"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#install-windows-service"}},[t._v("#")]),t._v(" Install Windows Service")]),t._v(" "),e("p",[t._v("After get the app running interactively, if your server is Windows and you want to install the app as a Windows service, run")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("npm install -g node-windows\nnpm link node-windows\nnode windows-service.js\n")])])]),e("p",[t._v("This will create and start service "),e("em",[t._v("notifyBC")]),t._v(". To change service name, modify file "),e("em",[t._v("windows-service.js")]),t._v(" before running it. See "),e("a",{attrs:{href:"https://github.com/coreybutler/node-windows",target:"_blank",rel:"noopener noreferrer"}},[t._v("node-windows"),e("OutboundLink")],1),t._v(" for other operations such as uninstalling the service.")]),t._v(" "),e("h2",{attrs:{id:"deploy-docker-container"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#deploy-docker-container"}},[t._v("#")]),t._v(" Deploy Docker Container")]),t._v(" "),e("p",[t._v("If you have git and Docker installed, you can run following command to deploy "),e("em",[t._v("NotifyBC")]),t._v(" Docker container:")]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone https://github.com/bcgov/NotifyBC.git\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" NotifyBC\ndocker build -t notify-bc "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\ndocker run -p "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("3000")]),t._v(":3000 notify-bc\n")])])]),e("p",[t._v("If successful, similar output is displayed as in source code installation.")]),t._v(" "),e("h2",{attrs:{id:"deploy-to-kubernetes"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#deploy-to-kubernetes"}},[t._v("#")]),t._v(" Deploy to Kubernetes")]),t._v(" "),e("p",[e("em",[t._v("NotifyBC")]),t._v(" provides a "),e("a",{attrs:{href:"https://github.com/orgs/bcgov/packages/container/package/notify-bc",target:"_blank",rel:"noopener noreferrer"}},[t._v("container package"),e("OutboundLink")],1),t._v(" in GitHub Container Registry and a "),e("a",{attrs:{href:"https://helm.sh/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Helm"),e("OutboundLink")],1),t._v(" chart to facilitate Deploying to Kubernetes. Azure AKS and OpenShift are the two tested platforms. Other Kubernetes platforms are likely to work subject to customizations. Before deploying to AKS, "),e("a",{attrs:{href:"https://docs.microsoft.com/en-us/azure/aks/ingress-basic#create-an-ingress-controller",target:"_blank",rel:"noopener noreferrer"}},[t._v("create an ingress controller\n"),e("OutboundLink")],1),t._v(".")]),t._v(" "),e("p",[t._v("The deployment can be initiated from localhost or automated by CI service such as Jenkins. Regardless, at the initiator's side following software needs to be installed:")]),t._v(" "),e("ul",[e("li",[t._v("git")]),t._v(" "),e("li",[t._v("Platform-specific CLI such as "),e("a",{attrs:{href:"https://docs.microsoft.com/en-us/cli/azure/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Azure CLI"),e("OutboundLink")],1),t._v(" or "),e("a",{attrs:{href:"https://docs.openshift.org/latest/cli_reference/index.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("OpenShift CLI"),e("OutboundLink")],1)]),t._v(" "),e("li",[e("a",{attrs:{href:"https://helm.sh/docs/intro/install/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Helm CLI"),e("OutboundLink")],1)])]),t._v(" "),e("p",[t._v("To install,")]),t._v(" "),e("ol",[e("li",[e("p",[t._v("Follow your platform's instruction to login to the platform. For AKS, run "),e("code",[t._v("az login")]),t._v(" and "),e("code",[t._v("az aks get-credentials")]),t._v("; for OpenShift, run "),e("code",[t._v("oc login")])])]),t._v(" "),e("li",[e("p",[t._v("Run")]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" clone https://github.com/bcgov/NotifyBC.git\n"),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("cd")]),t._v(" NotifyBC\nhelm "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" -gf helm/platform-specific/"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("platform"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(".yaml helm\n")])])]),e("p",[t._v("replace <platform> with "),e("em",[t._v("openshift")]),t._v(" or "),e("em",[t._v("aks")]),t._v(" depending on your platform.")]),t._v(" "),e("p",[t._v("The above commands create following artifacts:")]),t._v(" "),e("ul",[e("li",[t._v("A MongoDB cluster with 2 nodes and 1 arbiter, each implemented as a stateful set")]),t._v(" "),e("li",[t._v("Two deployments - "),e("em",[t._v("notify-bc-app")]),t._v(" and "),e("em",[t._v("notify-bc-cron")])]),t._v(" "),e("li",[t._v("One HPA - "),e("em",[t._v("notify-bc-cron")])]),t._v(" "),e("li",[t._v("Four services - "),e("em",[t._v("notify-bc")]),t._v(", "),e("em",[t._v("notify-bc-smtp")]),t._v(", "),e("em",[t._v("mongodb-headless")]),t._v(" and "),e("em",[t._v("mongodb-arbiter-headless")])]),t._v(" "),e("li",[t._v("Two PVCs each for one MongoDB node")]),t._v(" "),e("li",[t._v("Two config maps - "),e("em",[t._v("notify-bc")]),t._v(" and "),e("em",[t._v("mongodb-scripts")])]),t._v(" "),e("li",[t._v("Two service accounts - "),e("em",[t._v("notify-bc")]),t._v(" and "),e("em",[t._v("mongodb")])]),t._v(" "),e("li",[t._v("One more more secrets, with the most important one being "),e("em",[t._v("mongodb")]),t._v(", containing MongoDB connection credentials")]),t._v(" "),e("li",[t._v("On AKS,\n"),e("ul",[e("li",[t._v("a "),e("em",[t._v("notify-bc")]),t._v(" ingress")])])]),t._v(" "),e("li",[t._v("On OpenShift,\n"),e("ul",[e("li",[t._v("2 routes - "),e("em",[t._v("notify-bc-web")]),t._v(" and "),e("em",[t._v("notify-bc-smtp")])])])])])])]),t._v(" "),e("p",[t._v("To upgrade,")]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[t._v("helm upgrade "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("release-name"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" -f helm/platform-specific/"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("platform"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(".yaml --set mongodb.auth.rootPassword"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("mongodb-root-password"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" --set mongodb.auth.replicaSetKey"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("mongodb-replica-set-key"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" --set mongodb.auth.password"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("mongodb-password"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" helm\n")])])]),e("p",[t._v("replace <release-name> with installed helm release name and <platform> with "),e("em",[t._v("openshift")]),t._v(" or "),e("em",[t._v("aks")]),t._v(" depending on your platform. <mongodb-root-password>, <mongodb-replica-set-key> and <mongodb-password> can be found in "),e("em",[t._v("mongodb")]),t._v(" secret.")]),t._v(" "),e("p",[t._v("To uninstall,")]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[t._v("helm uninstall "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("release-name"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])]),e("p",[t._v("replace <release-name> with installed helm release name.")]),t._v(" "),e("h3",{attrs:{id:"customizations"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#customizations"}},[t._v("#")]),t._v(" Customizations")]),t._v(" "),e("p",[t._v("Various customizations can be made to chart. Some are platform dependent. To customize, first create a file with extension "),e("em",[t._v(".local.yaml")]),t._v(". The rest of the document assumes the file is "),e("em",[t._v("helm/values.local.yaml")]),t._v(". Then add customized parameters to the file. See "),e("em",[t._v("helm/values.yaml")]),t._v(" and Bitnami MongoDB chart "),e("a",{attrs:{href:"https://github.com/bitnami/charts/tree/master/bitnami/mongodb",target:"_blank",rel:"noopener noreferrer"}},[t._v("readme"),e("OutboundLink")],1),t._v(" for customizable parameters. Parameters in "),e("em",[t._v("helm/values.local.yaml")]),t._v(" overrides corresponding ones in "),e("em",[t._v("helm/values.yaml")]),t._v(". In particular, parameters under "),e("em",[t._v("mongodb")]),t._v(" of "),e("em",[t._v("helm/values.local.yaml")]),t._v(" overrides Bitnami MongoDB chart parameters.")]),t._v(" "),e("p",[t._v("To apply customizations, add "),e("code",[t._v("-f helm/values.local.yaml")]),t._v(" to the helm command after "),e("code",[t._v("-f helm/platform-specific/<platform>.yaml")]),t._v(". For example, to run "),e("code",[t._v("helm install")]),t._v(" with customization,")]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[t._v("helm "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" -gf helm/platform-specific/"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("platform"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(".yaml -f helm/values.local.yaml helm\n")])])]),e("p",[t._v("to run "),e("code",[t._v("helm upgrade")]),t._v(" with customization,")]),t._v(" "),e("div",{staticClass:"language-sh extra-class"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[t._v("helm upgrade "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("release-name"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" -f helm/platform-specific/"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("platform"),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(".yaml -f helm/values.local.yaml helm\n")])])]),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[t._v("Backup "),e("i",[t._v("helm/values.local.yaml")])]),t._v(" "),e("p",[t._v("Backup "),e("em",[t._v("helm/values.local.yaml")]),t._v(" to a private secured SCM is highly recommended, especially for production environment.")])]),t._v(" "),e("p",[t._v("Following are some example customizations.")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("To set hostname on AKS,")]),t._v(" "),e("div",{staticClass:"language-yaml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# in file helm/values.local.yaml")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ingress")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("hosts")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("host")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" myNotifyBC.myOrg.com\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("paths")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("path")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" /\n")])])])]),t._v(" "),e("li",[e("p",[t._v("Use "),e("a",{attrs:{href:"https://docs.microsoft.com/en-us/azure/aks/ingress-tls",target:"_blank",rel:"noopener noreferrer"}},[t._v("Let's Encrypt on AKS"),e("OutboundLink")],1),t._v(". After following the instructions in the link, add following ingress customizations to file "),e("em",[t._v("helm/values.local.yaml")])]),t._v(" "),e("div",{staticClass:"language-yaml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# in file helm/values.local.yaml")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("ingress")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("annotations")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("cert-manager.io/cluster-issuer")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" letsencrypt\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("tls")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("secretName")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" tls"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("secret\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("hosts")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" notify"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("bc.local\n")])])])]),t._v(" "),e("li",[e("p",[t._v("Route host names on Openshift are by default auto-generated. To set to fix values")]),t._v(" "),e("div",{staticClass:"language-yaml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# in file helm/values.local.yaml")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("route")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("web")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("host")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'myNotifyBC.myOrg.com'")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("smtp")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("host")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'smtp.myNotifyBC.myOrg.com'")]),t._v("\n")])])])]),t._v(" "),e("li",[e("p",[t._v("To add certificates to OpenShift web route")]),t._v(" "),e("div",{staticClass:"language-yaml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# in file helm/values.local.yaml")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("route")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("web")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("tls")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("caCertificate")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("---")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("BEGIN CERTIFICATE"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("---")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("...")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("---")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("END CERTIFICATE"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("---")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("certificate")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("---")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("BEGIN CERTIFICATE"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("---")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("...")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("---")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("END CERTIFICATE"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("---")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("insecureEdgeTerminationPolicy")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" Redirect\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("key")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("---")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("BEGIN PRIVATE KEY"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("---")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("...")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("---")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("END PRIVATE KEY"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("---")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("\n")])])])]),t._v(" "),e("li",[e("p",[t._v("To update "),e("em",[t._v("config.local.js")]),t._v(" in config map,")]),t._v(" "),e("div",{staticClass:"language-yaml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# in file helm/values.local.yaml")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("configMap")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("config.local.js")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("|")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("\n    module.exports = "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("httpHost")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'https://myNotifyBC.myOrg.com'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("internalHttpHost")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'http://{{include \"NotifyBC.fullname\" .}}:{{ .Values.service.web.port }}'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("inboundSmtpServer")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("listeningSmtpPort")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("2525")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("options")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n          "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" if not (.Values.service.smtp.enabled) "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n          "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("secure")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n          "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" end "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])])]),t._v(" "),e("li",[e("p",[t._v("MongoDb")]),t._v(" "),e("p",[e("em",[t._v("NotifyBC")]),t._v(" chart depends on "),e("a",{attrs:{href:"https://github.com/bitnami/charts/tree/master/bitnami/mongodb",target:"_blank",rel:"noopener noreferrer"}},[t._v("Bitnami MongoDB chart"),e("OutboundLink")],1),t._v(" for MongoDB database provisioning. All documented parameters are customizable by adding "),e("em",[t._v("mongodb.")]),t._v(" prefix. For example, to change "),e("em",[t._v("architecture")]),t._v(" to "),e("em",[t._v("standalone")])]),t._v(" "),e("div",{staticClass:"language-yaml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# in file helm/values.local.yaml")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("mongodb")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("architecture")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" standalone\n")])])]),e("p",[t._v("Bitnami MongoDB uses Docker Hub for docker registry. Rate limit imposed by Docker Hub can cause runtime problems. If your organization has JFrog artifactory, you can change the registry")]),t._v(" "),e("div",{staticClass:"language-yaml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# in file helm/values.local.yaml")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("mongodb")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("registry")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" <artifactory.myOrg.com"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("pullSecrets")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" <docker"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("pull"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("secret"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")]),t._v("\n")])])]),e("p",[t._v("The above settings assume you have setup secret <docker-pull-secret> to access <artifactory.myOrg.com>.")])]),t._v(" "),e("li",[e("p",[t._v("Enable scheduled MongoDB backup CronJob")]),t._v(" "),e("div",{staticClass:"language-yaml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# in file helm/values.local.yaml")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("cronJob")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("enabled")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("schedule")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1 0 * * *'")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("retentionDays")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("7")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("timeZone")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" UTC\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("persistence")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("size")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" 5Gi\n")])])]),e("p",[t._v("where")]),t._v(" "),e("ul",[e("li",[t._v("enabled: whether to enable the MongoDB backup CronJob or not; default to "),e("code",[t._v("false")])]),t._v(" "),e("li",[t._v("schedule: the Unix crontab schedule; default to "),e("code",[t._v("'1 0 * * *'")]),t._v(" which runs daily at 12:01AM")]),t._v(" "),e("li",[t._v("retentionDays: how many days the backup is retained; default to "),e("code",[t._v("7")])]),t._v(" "),e("li",[t._v("timeZone: the Unix TZ environment variable; default to "),e("code",[t._v("UTC")])]),t._v(" "),e("li",[t._v("persistence size: size of PVC; default to "),e("code",[t._v("5Gi")])])]),t._v(" "),e("p",[t._v("The CronJob backs up MongoDB to a PVC named after the chart with suffix "),e("em",[t._v("-cronjob-mongodb-backup")]),t._v(" and purges backups that are older than "),e("em",[t._v("retentionDays")]),t._v(".")])]),t._v(" "),e("li",[e("p",[e("em",[t._v("NotifyBC")]),t._v(" image tag defaults to latest published version. To change to "),e("em",[t._v("latest")]),t._v(", i.e. tip of the "),e("em",[t._v("main branch")]),t._v(",")]),t._v(" "),e("div",{staticClass:"language-yaml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# in file helm/values.local.yaml")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("tag")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" latest\n")])])])]),t._v(" "),e("li",[e("p",[t._v("Enable autoscaling for app pod")]),t._v(" "),e("div",{staticClass:"language-yaml extra-class"},[e("pre",{pre:!0,attrs:{class:"language-yaml"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# in file helm/values.local.yaml")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("autoscaling")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("enabled")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n")])])])])])])}),[],!1,null,null,null);a.default=n.exports}}]);